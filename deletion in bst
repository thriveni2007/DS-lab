#include <stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node *right,*left;
};
struct node *create(int key){
    struct node *temp=malloc(sizeof(struct node));
    temp->data=key;
    temp->right=NULL;
    temp->left=NULL;
    return temp;
}
struct node *insert(struct node *root,int key){
    if(root==NULL){
        return create(key);
    }
    else if(key<root->data){
        root->left=insert(root->left,key);
    }
    else if(key>root->data){
        root->right=insert(root->right,key);
    }
    return root;
}
struct node *min(struct node *root,int key){
    struct node *temp=root;
    while(temp->left!=NULL){
        temp=temp->left;
    }return temp;
}
void inorder(struct node *root){
    if(root!=NULL){
    inorder(root->left);
    printf("%d",root->data);
    inorder(root->right);}
}
struct node *deletion(struct node *root,int key){
    if(key<root->data){
        root->left=deletion(root->left,key);
    }
    else if(key>root->data){
        root->right=deletion(root->right,key);
    }
    else{
        if(root->left==NULL){
        struct node* temp=root->right;
        free(root);
        return temp;}
        else if(root->right==NULL){
            struct node *temp=root->left;
            free(root);
            return temp;}
       
        struct node *temp=min(root->right,key);
        root->data=temp->data;
        root->right=deletion(root->right,temp->data);
        
    }
    return root;
}
 
int main() {
    int val;
   struct node *root=NULL;
   root=insert(root,60);
   root=insert(root,70);
   root=insert(root,20);
   root=insert(root,30);
   root=insert(root,80);
   root=insert(root,10);
   inorder(root);
   printf("enter the no to del:");
   scanf("%d",&val);
   root=deletion(root,val);
   inorder(root);
   

    return 0;
}
